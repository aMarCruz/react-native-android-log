// Top-level build file where you can add configuration options common to all sub-projects/modules.
import groovy.json.JsonSlurper

// dynamically retrieve version from package.json
def computePackageVersion() {
    def slurper = new JsonSlurper()
    def json = slurper.parse(file('../package.json'), 'utf-8')
    return json.version
}

def safeExtGet(prop, fallback) {
    rootProject.ext.has(prop) ? rootProject.ext.get(prop) : fallback
}

/*
*  Note: Google Play Services 12.0.x to 15.0.x depends on support libraries 26.1.0
*/

buildscript {
    repositories {
        mavenLocal()
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.3'
    }
}

apply plugin: 'com.android.library'

android {
    compileSdkVersion safeExtGet('compileSdkVersion', 27)
    buildToolsVersion safeExtGet('buildToolsVersion', '27.0.3')

    defaultConfig {
        minSdkVersion safeExtGet('minSdkVersion', 16)
        targetSdkVersion safeExtGet('targetSdkVersion', 27)
        versionCode 1
        versionName computePackageVersion()
    }
    lintOptions {
        abortOnError false
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    mavenLocal()
    google()
    jcenter()
    maven { url "$rootDir/../node_modules/react-native/android" }
}

/*
    Should I use the "api" keyword for places?
    implementation vs api: https://stackoverflow.com/questions/44413952
*/
dependencies {
    compileOnly "com.facebook.react:react-native:${safeExtGet('reactNativeVersion', '+')}"
}
